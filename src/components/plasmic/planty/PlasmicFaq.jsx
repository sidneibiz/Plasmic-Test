// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bJmo2tdG6kQGZ4iwYBrjeU
// Component: UcNHWjLZE9dDlt
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: J4lJf__ulg_AyS/component
import ProductCard from "../../ProductCard"; // plasmic-import: BSQ6AFlYL_eYT0/component
import Ratings from "../../Ratings"; // plasmic-import: 6Seh2opbHxlH6n/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: UfFtit0F9KMo8Y/component
import BlogPost from "../../BlogPost"; // plasmic-import: 6G96xi_1i6SBB7/component
import Footer from "../../Footer"; // plasmic-import: f0WP3Kg2Vjqhf/component
import MenuButton from "../../MenuButton"; // plasmic-import: s5RsSqZn9G6RHH/component
import { useScreenVariants as useScreenVariantsmSPqrdrCRlH2Q } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: mSPqrdrCRlH2Q-/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: bJmo2tdG6kQGZ4iwYBrjeU/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: UcNHWjLZE9dDlt/css
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: rHrabkGVopUVsx/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: m8GQPBW-aMTEyU/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: rzNXoG5FXGHSqt/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: BoIvXwBIdWRSpK/icon
import galinaNMiziNqvJx5MUnsplashjpgKq8Mxv2UfJtYIz from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpeg"; // plasmic-import: Kq8MXV2ufJtYIz/picture
import igorSonFvPxCqgtwcUnsplashjpgJaQzEvqCnmGg0K from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpeg"; // plasmic-import: JaQZEvqCnmGG0K/picture
import scottWebbORwRlTgBrPoUnsplashjpgEOgI7Ub5FNr00 from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg"; // plasmic-import: eOgI7UB5FNr00-/picture
import freddieMarriageUcfKyTanLuUnsplashjpgQo52Jm57Gl1YoF from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg"; // plasmic-import: QO52Jm57GL1YoF/picture
import f2LpYf5MQhAzaV from "./images/f2.jpeg"; // plasmic-import: LPYf5MQhAza-V_/picture
import f3Yvnqn5PMYvnt5M from "./images/f3.jpeg"; // plasmic-import: yvnqn5pMYvnt5M/picture
import f4TyA58LWa7L2Yrv from "./images/f4.jpeg"; // plasmic-import: tyA58lWA7L2YRV/picture
import b1NsD3CntDlfKy5 from "./images/b1.jpeg"; // plasmic-import: Ns-D3cntDlfKY5/picture
import b2Jw64HwElivnsy1 from "./images/b2.jpeg"; // plasmic-import: JW64hwElivnsy1/picture
import b35R9QudvmNo2E8M from "./images/b3.jpeg"; // plasmic-import: 5r9qudvmNO2E8M/picture
import adidasCCrvhQGfb8HRe9 from "./images/adidas.png"; // plasmic-import: cCrvhQGfb8HRe9/picture
import hm0FJWwM0P935Q5 from "./images/hm.png"; // plasmic-import: 0fJWwM0P935q-5/picture
import kappaBNhe0LiQxjWqxw from "./images/kappa.png"; // plasmic-import: bNHE0LiQxjWqxw/picture
import lacosteD18LkuZb25OP from "./images/lacoste.png"; // plasmic-import: D18lkuZb25_O-p/picture
import levisDmQcAw3XWoWmE from "./images/levis.png"; // plasmic-import: Dm-QcAW3xWOWmE/picture
import plant6JpgSmlpt5YHy4NcBw from "./images/plant6Jpg.png"; // plasmic-import: SMLPT5yHy4ncBw/picture
import plant1JpgVkPelBbfgDWkb from "./images/plant1Jpg.png"; // plasmic-import: Vk-PelBbfgDWkb/picture
import plant7JpgX0MLq28SL3ZZq from "./images/plant7Jpg.png"; // plasmic-import: X0MLq28S_L3ZZq/picture
import plant5Jpg0H04FmanF8FAzT from "./images/plant5Jpg.png"; // plasmic-import: 0H04fmanF8FAzT/picture
import plant41JpgEOuh2W04GMhb0R from "./images/plant41Jpg.png"; // plasmic-import: eOUH2W04gMHB0r/picture
import plant31JpgEpRe6YzR5Bmvfv from "./images/plant31Jpg.png"; // plasmic-import: epRe6yzR5Bmvfv/picture
import plant9WebpPhh9GvHcBSh8Se from "./images/plant9Webp.webp"; // plasmic-import: Phh9GvHcBSh8SE/picture
import plant2WebpDlXcs2SQpKtlju from "./images/plant2Webp.webp"; // plasmic-import: dlXcs2sQpKtlju/picture
import promowebpGyPoErzUzN2Sxm from "./images/promowebp.webp"; // plasmic-import: GyPoErzUzN2sxm/picture

export const PlasmicFaq__VariantProps = new Array();

export const PlasmicFaq__ArgProps = new Array();

function PlasmicFaq__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsmSPqrdrCRlH2Q()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__ehdwq)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <Header2
                  className={classNames("__wab_instance", sty.header2__yNfe7)}
                />
              ) : null}

              <div className={classNames(projectcss.all, sty.freeBox__kuCn1)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__j6YwS)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__paAQ
                      )}
                    >
                      {"Behold our FAQ"}
                    </h1>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w2Mo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aNpi
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                            : "All right, friends. Letâ€™s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kFtlX)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__aHyoa)}>
                  {true ? (
                    <Header2
                      className={classNames(
                        "__wab_instance",
                        sty.header2__a05Bn
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>

              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__qKYo0)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__sK6Lv
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___11R78)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__j0GFz)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__pSkg
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ns80)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: galinaNMiziNqvJx5MUnsplashjpgKq8Mxv2UfJtYIz,
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__dw2W9
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__gDVjz)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___0VcMc
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__piemc)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: igorSonFvPxCqgtwcUnsplashjpgJaQzEvqCnmGg0K,
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__pxxZi
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__zImz2)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__oM0Vc
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__tna5Y)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: scottWebbORwRlTgBrPoUnsplashjpgEOgI7Ub5FNr00,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__kNu45
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__dmoAx)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___4NpGu
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ftgUz)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: freddieMarriageUcfKyTanLuUnsplashjpgQo52Jm57Gl1YoF,
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__petYv
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___1FIin)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fhgF
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__sXmCa)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__aVWhn)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__sl9Fn
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__obJ0H
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__zmM6Q
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two"}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vwOug
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__yw1A)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__fXyYn
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wvFsW)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f2LpYf5MQhAzaV,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__eJtVh
                          )}
                          stars={"four"}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tzEiO)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___4Z6Mr
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___2N2P)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f3Yvnqn5PMYvnt5M,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__wopAy
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five"}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___6Ap0M)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__vkvTn
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__em3Vj)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f4TyA58LWa7L2Yrv,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__kkKYe
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__t24Rd)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aVMfY
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__cGf5Y)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__bbFuk)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost___0G1ZO
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vwafQ)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b1NsD3CntDlfKy5,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__pqC78)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__zvbok
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__gIyjm)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b2Jw64HwElivnsy1,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__v6A7H)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__xQRoe
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ezry7)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b35R9QudvmNo2E8M,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__k6R16)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lvgQ7)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"90px"}
                    src={{
                      src: adidasCCrvhQGfb8HRe9,
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rXdqq)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"91px"}
                    src={{
                      src: hm0FJWwM0P935Q5,
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ibpGf)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"98px"}
                    src={{
                      src: kappaBNhe0LiQxjWqxw,
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__a4CU)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"124px"}
                    src={{
                      src: lacosteD18LkuZb25OP,
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ot4Yb)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"125px"}
                    src={{
                      src: levisDmQcAw3XWoWmE,
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__mp3L)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eDew)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cKtX1
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__wtRZw)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__r0DyD)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ukpcg)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant6JpgSmlpt5YHy4NcBw,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1NKep
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__r0NRh)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__eyYfc)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___6XDL
                      )}
                    >
                      {"Donec finibus"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__va1Xa
                      )}
                    >
                      {"bigplants"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__qkNfh
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__qJuKd)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zdBlX)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant1JpgVkPelBbfgDWkb,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__t3WjV)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__yDQoV)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__nUtsL)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__yc84X
                      )}
                    >
                      {"Nulla suscipit"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ooUtt
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__gFNkH
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__yG2So)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1VYnv)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant7JpgX0MLq28SL3ZZq,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2Pltl
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__t3GXs)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__b2HBz)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___1V1D2
                      )}
                    >
                      {"Sed consectetur"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vh7Ps
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__k6CzT
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__iuKPg)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant5Jpg0H04FmanF8FAzT,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vlEPy)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__vEulw)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__yxq0P)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pKqR
                      )}
                    >
                      {"Vestibulum eget"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y9JWh
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__gp7I
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1HgXb)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___8AYaH
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__f7L5)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___5CbYa)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__bdEwH)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant41JpgEOuh2W04GMhb0R,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__u1Hty)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__kso1G)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__d4Lak)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pEzG
                      )}
                    >
                      {"Cras molestie"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x1YbM
                      )}
                    >
                      {"cactuses "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___2CXzz
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__qvyw0)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dqvk4)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant31JpgEpRe6YzR5Bmvfv,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__lcag)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__rn6H8)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___0EhNz)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__f1FPb
                      )}
                    >
                      {"Curabitur eu tempor"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bkLs7
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__cniPs
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__rbZvs)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___8Kd7L)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant9WebpPhh9GvHcBSh8Se,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eWWm)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__u0OW)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___27KeC)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__aszT
                      )}
                    >
                      {"Fusce sagittis"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eyiIq
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___8UzS
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__emakf)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__q5Vin)}
                    displayHeight={"270px /* plasmic-token: 7poH7v2BwN-d7b */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant2WebpDlXcs2SQpKtlju,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___25GKk
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__x61Vs)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__iHWY)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__tFpt
                      )}
                    >
                      {"Integer porta"}
                    </a>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k8Dfe
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ztpgB
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__wV3X)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zcSiz)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__oIjE
                    )}
                  >
                    {"How long does shipping take?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cIo
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "Now thatâ€™s a frequent one all right, ainâ€™t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__o7Ses)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cgjVf
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pRRrS
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sbg0E
                            )}
                          >
                            {
                              "US shipping will take between 3 to 5 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__l5Ws
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___0N147
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nVv8S
                            )}
                          >
                            {
                              "International shipping will take between 5 and 10 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v9LIy
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ueTSe
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9RNor
                            )}
                          >
                            {
                              "Mars shipping will be automatically redirected to Elon Muskâ€™s Twitter account."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rCUvx)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ccKU
                    )}
                  >
                    {"How do refunds and returns work?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0K5Ea
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dPttV)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qwfLv
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__lXlIi
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__wtn2Y
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__p3HE
                                )}
                              >
                                {"All discounted items sales are final."}
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__aNr1K
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__wMqh5
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iwuzK
                                )}
                              >
                                {
                                  "If youâ€™d like another version of your item, please use the return label. Instructions are printed on its back."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zab2A
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fLIgi
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hgkip
                                )}
                              >
                                {
                                  "If your item is damaged or not functioning correctly, email us at info@planty.com, and weâ€™ll refund you + send you a new one ASAP!"
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lQb7Y)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__bHbPm
                    )}
                  >
                    {"Rapid-fire questions"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___41PQa
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___76N7J)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__pdDmq
                    )}
                  >
                    {"How do you handle sensitive customer information?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lPaj7
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__deo4V)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wq9Gv
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qb8Wv
                            )}
                          >
                            {"Q: Why is this Planty theme so beautiful?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hr4Ts
                            )}
                          >
                            {
                              "A: We hired our first designer a couple of months ago."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qVt29
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uuy9U
                            )}
                          >
                            {"Q: Why did you build a theme for Stackbit?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b803
                            )}
                          >
                            {
                              "A: We believe in Stackbitâ€™s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zRMe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8EmU
                            )}
                          >
                            {"Q: How many people work at Snipcart? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Mvuh
                            )}
                          >
                            {
                              "A: Not a lot! Weâ€™re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rYQl
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fWknP
                            )}
                          >
                            {"Q: Why is Snipcart based in QuÃ©bec City?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rcFjs
                            )}
                          >
                            {"A: Have you been here? Itâ€™s beaaautiful!"}
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tstqz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ziH8X
                            )}
                          >
                            {"Q: Whatâ€™s the meaning of life? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b0Ps
                            )}
                          >
                            {
                              "A: Weâ€™re not quite sure. But building useful products with people we love feels meaningful enough."
                            }
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <Footer
              className={classNames("__wab_instance", sty.footer__jt8My)}
            />
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__trHlA)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___5FqWq)}>
                <div className={classNames(projectcss.all, sty.columns__vauFm)}>
                  <div className={classNames(projectcss.all, sty.column__ut8D)}>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__dqhge)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "562px"
                          : "562px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "100%"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "947px"
                          : "947px"
                      }
                      loading={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "lazy"
                          : "lazy"
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? {
                              src: promowebpGyPoErzUzN2Sxm,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                          : {
                              src: promowebpGyPoErzUzN2Sxm,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__csbcj)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__ryLi
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Behold our FAQ"
                        : "Still have questions?\nContact us. "}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.columns___9UCan
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__soi5W
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__i0D7O
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "226 rue St-Joseph E, \nQuÃ©bec, QC, Canada, \nG1K 3A9"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3RRbB
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "+1-202-555-0112"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__jnhax
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1LcfK
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "geeks@snipcart.com"}
                        </div>

                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aiOma
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <p.Stack
                                as={"a"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.link__phqig
                                )}
                              >
                                <LocationSvgrepoCom1SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__eRjE
                                  )}
                                  role={"img"}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__fQzQt
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "Discover"
                                    : "On the map"}
                                </div>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__stKq3)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dc1Wo)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___60UTk
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gr7Fa
                        )}
                      >
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <MenuButton
                            data-plasmic-name={"menuButton"}
                            data-plasmic-override={overrides.menuButton}
                            className={classNames(
                              "__wab_instance",
                              sty.menuButton
                            )}
                          />
                        ) : null}
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aKz3Y
                            )}
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? LogoWhitesvgIcon
                                  : LogoWhitesvgIcon
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__cMauy
                              )}
                              role={"img"}
                            />

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___17IsS
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/store`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Store"
                                : "Store"}
                            </a>

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__ym43R
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/about`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "About"
                                : "About"}
                            </a>

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___4HqGm
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/faq`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Faq"
                                : "Faq"}
                            </a>
                          </p.Stack>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bkLRs
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Â© Company. All rights reserved. This site proudly built with "
                              : "Â© Company. All rights reserved. This site proudly built with "}
                          </div>

                          <a
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__vr6P
                            )}
                            href={
                              hasVariant(globalVariants, "screen", "mobile")
                                ? "https://www.plasmic.app/"
                                : "https://www.plasmic.app/"
                            }
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Plasmic"
                              : "Plasmic"}
                          </a>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],

  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),
    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
